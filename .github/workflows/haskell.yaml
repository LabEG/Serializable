name: Test
on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      run: nix develop ./tests/generator -c
    steps:
      - uses: actions/checkout@v4
      - uses: nixbuild/nix-quick-install-action@v27
      - name: Restore and cache Nix store
        uses: nix-community/cache-nix-action@v5
        with:
          # restore and save a cache using this key
          primary-key: nix-${{ runner.os }}-${{ hashFiles('**/*.nix') }}
          # if there's no cache hit, restore a cache by this prefix
          restore-prefixes-first-match: nix-${{ runner.os }}-
          paths: ~/.npm
          # collect garbage until Nix store size (in bytes) is at most this number
          # before trying to save a new cache
          gc-max-store-size-linux: 7000000000
          # do purge caches
          purge: true
          # purge all versions of the cache
          purge-prefixes: cache-${{ runner.os }}-
          # created more than this number of seconds ago relative to the start of the `Post Restore` phase
          purge-created: 0
          # except the version with the `primary-key`, if it exists
          purge-primary-key: never
      - name: Install NodeJS dependencies
        run: ${{ env.run }} npm i
      - name: Run tests
        run: ${{ env.run }} npm run test
      - name: Run tests for nested class
        run: ${{ env.run }} npm run test-nested
